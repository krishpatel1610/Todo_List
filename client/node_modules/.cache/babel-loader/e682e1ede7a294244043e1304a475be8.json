{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adity\\\\Downloads\\\\FullStack-MERN-TodoList-master\\\\FullStack-MERN-TodoList-master\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:3001\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [popupActive, setPopupActive] = useState(false);\n  const [newTodo, setNewTodo] = useState(\"\");\n  useEffect(() => {\n    GetTodos();\n  }, []);\n\n  const GetTodos = () => {\n    fetch(API_BASE + \"/todos\").then(res => res.json()).then(data => setTodos(data)).catch(err => console.error(\"Error : \", err));\n  };\n\n  const CompleteTodo = async id => {\n    const data = await fetch(API_BASE + \"/todo/complete/\" + id).then(res => res.json());\n    setTodos(todos => todos.map(todo => {\n      if (todo._id === data._id) {\n        todo.complete = data.complete;\n      }\n\n      return todo;\n    }));\n  };\n\n  const deleteTodo = async id => {\n    const data = await fetch(API_BASE + \"/todo/delete/\" + id, {\n      method: \"DELETE\"\n    }).then(res => res.json());\n    setTodos(todos => todos.filter(todo => todo._id !== data._id));\n  };\n\n  const addTodo = async () => {\n    const data = await fetch(API_BASE + \"/todo/new\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        text: newTodo\n      })\n    }).then(res => res.json());\n    setTodos([...todos, data]);\n    setPopupActive(false);\n    setNewTodo(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome, User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Your Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todos\",\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo\" + (todo.complete ? \" is-complete\" : \"\"),\n        onClick: () => CompleteTodo(todo._id),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: todo.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"delete-todo\",\n          onClick: () => deleteTodo(todo._id),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 6\n        }, this)]\n      }, todo._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addPopup\",\n      onClick: () => setPopupActive(true),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 3\n    }, this), popupActive ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"closePopup\",\n        onClick: () => {\n          setPopupActive(false);\n          setNewTodo(\"\");\n        },\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"add-todo-input\",\n          onChange: e => setNewTodo(e.target.value),\n          value: newTodo,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          onClick: () => addTodo(),\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 2\n  }, this);\n}\n\n_s(App, \"hBaeT8MXYiBrK1sejsTqGWSgcfw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Adity/Downloads/FullStack-MERN-TodoList-master/FullStack-MERN-TodoList-master/client/src/App.js"],"names":["useEffect","useState","API_BASE","App","todos","setTodos","popupActive","setPopupActive","newTodo","setNewTodo","GetTodos","fetch","then","res","json","data","catch","err","console","error","CompleteTodo","id","map","todo","_id","complete","deleteTodo","method","filter","addTodo","headers","body","JSON","stringify","text","e","target","value"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAG,uBAAjB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACfU,IAAAA,QAAQ;AACR,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,QAAQ,GAAG,MAAM;AACtBC,IAAAA,KAAK,CAACT,QAAQ,GAAG,QAAZ,CAAL,CACEU,IADF,CACOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADd,EAEEF,IAFF,CAEOG,IAAI,IAAIV,QAAQ,CAACU,IAAD,CAFvB,EAGEC,KAHF,CAGQC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAc,UAAd,EAA0BF,GAA1B,CAHf;AAIA,GALD;;AAOA,QAAMG,YAAY,GAAG,MAAMC,EAAN,IAAY;AAChC,UAAMN,IAAI,GAAG,MAAMJ,KAAK,CAACT,QAAQ,GAAG,iBAAX,GAA+BmB,EAAhC,CAAL,CACdT,IADc,CACTC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADE,CAAnB;AAGAT,IAAAA,QAAQ,CAACD,KAAK,IAAIA,KAAK,CAACkB,GAAN,CAAUC,IAAI,IAAI;AACnC,UAAGA,IAAI,CAACC,GAAL,KAAaT,IAAI,CAACS,GAArB,EAA0B;AACzBD,QAAAA,IAAI,CAACE,QAAL,GAAgBV,IAAI,CAACU,QAArB;AACA;;AACD,aAAOF,IAAP;AACA,KALiB,CAAV,CAAR;AAMA,GAVD;;AAYA,QAAMG,UAAU,GAAG,MAAML,EAAN,IAAY;AAC9B,UAAMN,IAAI,GAAG,MAAMJ,KAAK,CAACT,QAAQ,GAAG,eAAX,GAA6BmB,EAA9B,EAAkC;AAACM,MAAAA,MAAM,EAAE;AAAT,KAAlC,CAAL,CACdf,IADc,CACTC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADE,CAAnB;AAEAT,IAAAA,QAAQ,CAACD,KAAK,IAAIA,KAAK,CAACwB,MAAN,CAAaL,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaT,IAAI,CAACS,GAAvC,CAAV,CAAR;AACA,GAJD;;AAMA,QAAMK,OAAO,GAAG,YAAY;AAC3B,UAAMd,IAAI,GAAG,MAAMJ,KAAK,CAACT,QAAQ,GAAG,WAAZ,EACpB;AAACyB,MAAAA,MAAM,EAAE,MAAT;AACCG,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR,OADV;AAICC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACpBC,QAAAA,IAAI,EAAE1B;AADc,OAAf;AAJP,KADoB,CAAL,CAOTI,IAPS,CAOJC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPH,CAAnB;AAQAT,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWW,IAAX,CAAD,CAAR;AACAR,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,IAAAA,UAAU,CAAC,EAAD,CAAV;AACA,GAZD;;AAcA,sBACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAIC;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBACEL,KAAK,CAACkB,GAAN,CAAUC,IAAI,iBACd;AAAK,QAAA,SAAS,EAAE,UAAUA,IAAI,CAACE,QAAL,GAAgB,cAAhB,GAAiC,EAA3C,CAAhB;AAA+E,QAAA,OAAO,EAAE,MAAML,YAAY,CAACG,IAAI,CAACC,GAAN,CAA1G;AAAA,gCACC;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADD,eAGC;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBAAuBD,IAAI,CAACW;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAHD,eAKC;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,OAAO,EAAE,MAAMR,UAAU,CAACH,IAAI,CAACC,GAAN,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALD;AAAA,SAAqED,IAAI,CAACC,GAA1E;AAAA;AAAA;AAAA;AAAA,cADA;AADF;AAAA;AAAA;AAAA;AAAA,YAJD,eAgBC;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,OAAO,EAAE,MAAMjB,cAAc,CAAC,IAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBD,EAiBED,WAAW,gBACX;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,OAAO,EAAE,MAAM;AAC1CC,UAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,UAAAA,UAAU,CAAC,EAAD,CAAV;AACC,SAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAMC;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AACC,UAAA,IAAI,EAAC,MADN;AAEC,UAAA,SAAS,EAAC,gBAFX;AAGC,UAAA,QAAQ,EAAE0B,CAAC,IAAI1B,UAAU,CAAC0B,CAAC,CAACC,MAAF,CAASC,KAAV,CAH1B;AAIC,UAAA,KAAK,EAAE7B,OAJR;AAIiB,UAAA,SAAS;AAJ1B;AAAA;AAAA;AAAA;AAAA,gBAFD,eAOC;AAAK,UAAA,SAAS,EAAC,QAAf;AAAwB,UAAA,OAAO,EAAE,MAAMqB,OAAO,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPD;AAAA;AAAA;AAAA;AAAA;AAAA,cAND;AAAA;AAAA;AAAA;AAAA;AAAA,YADW,GAkBR,EAnCL;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAuCA;;GAxFQ1B,G;;KAAAA,G;AA0FT,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst API_BASE = \"http://localhost:3001\";\n\nfunction App() {\n\n\tconst [todos, setTodos] = useState([]);\n\tconst [popupActive, setPopupActive] = useState(false);\n\tconst [newTodo, setNewTodo] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tGetTodos();\n\t}, []);\n\n\tconst GetTodos = () => {\n\t\tfetch(API_BASE + \"/todos\")\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => setTodos(data))\n\t\t\t.catch(err => console.error(\"Error : \", err));\n\t}\n\n\tconst CompleteTodo = async id => {\n\t\tconst data = await fetch(API_BASE + \"/todo/complete/\" + id)\n\t\t\t\t\t\t.then(res => res.json());\n\n\t\tsetTodos(todos => todos.map(todo => {\n\t\t\tif(todo._id === data._id) {\n\t\t\t\ttodo.complete = data.complete;\n\t\t\t}\n\t\t\treturn todo;\n\t\t}));\n\t}\n\n\tconst deleteTodo = async id => {\n\t\tconst data = await fetch(API_BASE + \"/todo/delete/\" + id, {method: \"DELETE\"})\n\t\t\t\t\t\t.then(res => res.json());\n\t\tsetTodos(todos => todos.filter(todo => todo._id !== data._id));\n\t}\n\n\tconst addTodo = async () => {\n\t\tconst data = await fetch(API_BASE + \"/todo/new\",\n\t\t\t\t\t\t{method: \"POST\",\n\t\t\t\t\t\t headers: {\n\t\t\t\t\t\t\t \"Content-Type\": \"application/json\"\n\t\t\t\t\t\t },\n\t\t\t\t\t\t body: JSON.stringify({\n\t\t\t\t\t\t\t text: newTodo\n\t\t\t\t\t\t })}).then(res => res.json());\n\t\tsetTodos([...todos, data]);\n\t\tsetPopupActive(false);\n\t\tsetNewTodo(\"\");\n\t}\n\n\treturn (\n\t<div className=\"App\">\n\t\t<h1>Welcome, User</h1>\n\t\t<h4>Your Tasks</h4>\n\n\t\t<div className=\"todos\">\n\t\t\t{todos.map(todo => (\n\t\t\t\t<div className={\"todo\" + (todo.complete ? \" is-complete\" : \"\")} key={todo._id} onClick={() => CompleteTodo(todo._id)}>\n\t\t\t\t\t<div className=\"checkbox\"></div>\n\n\t\t\t\t\t<div className=\"text\">{todo.text}</div>\n\n\t\t\t\t\t<div className=\"delete-todo\" onClick={() => deleteTodo(todo._id)}>X</div>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\n\t\t<div className=\"addPopup\" onClick={() => setPopupActive(true)}>+</div>\n\t\t{popupActive ? (\n\t\t\t<div className=\"popup\">\n\t\t\t\t<div className=\"closePopup\" onClick={() => {\n\t\t\t\t\tsetPopupActive(false);\n\t\t\t\t\tsetNewTodo(\"\");\n\t\t\t\t\t}}>X</div>\n\t\t\t\t\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<h3>Add Task</h3>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"add-todo-input\"\n\t\t\t\t\t\tonChange={e => setNewTodo(e.target.value)}\n\t\t\t\t\t\tvalue={newTodo} autoFocus />\n\t\t\t\t\t<div className=\"button\" onClick={() => addTodo()}>Create Task</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t) : ''}\n\t</div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}